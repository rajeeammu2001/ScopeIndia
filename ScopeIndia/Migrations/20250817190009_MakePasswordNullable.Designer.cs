// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScopeIndia.Data;

#nullable disable

namespace ScopeIndia.Migrations
{
    [DbContext(typeof(MVCDBContext))]
    [Migration("20250817190009_MakePasswordNullable")]
    partial class MakePasswordNullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ScopeIndia.Models.AboutUsSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SectionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AboutUsSections");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "One of India's best Training destinations...",
                            ImageUrl = "images/aboutus/google-rating.png",
                            Position = "center",
                            SectionName = "Intro",
                            Title = "SCOPE INDIA, your career partner!"
                        },
                        new
                        {
                            Id = 2,
                            Content = "With over two decades of experience...",
                            ImageUrl = "images/aboutus/team-animation.gif",
                            Position = "right",
                            SectionName = "Story",
                            Title = "Founded in 2007"
                        },
                        new
                        {
                            Id = 3,
                            Content = "SCOPE INDIA was launched in 2015...",
                            ImageUrl = "",
                            Position = "left",
                            SectionName = "Evolution",
                            Title = "Evolution"
                        },
                        new
                        {
                            Id = 4,
                            Content = "SCOPE INDIA began its journey...",
                            ImageUrl = "",
                            Position = "left",
                            SectionName = "Growth",
                            Title = "Growth"
                        },
                        new
                        {
                            Id = 5,
                            Content = "SCOPE INDIA has helped 15,000+ students...",
                            ImageUrl = "",
                            Position = "right",
                            SectionName = "Present Day Impact",
                            Title = "Present Day Impact"
                        },
                        new
                        {
                            Id = 6,
                            Content = "SCOPE INDIA seeks to close the knowledge gap...",
                            ImageUrl = "",
                            Position = "left",
                            SectionName = "Mission",
                            Title = "Our Mission"
                        },
                        new
                        {
                            Id = 7,
                            Content = "We aspire to become the most respected...",
                            ImageUrl = "",
                            Position = "right",
                            SectionName = "Vision",
                            Title = "Our Vision"
                        });
                });

            modelBuilder.Entity("ScopeIndia.Models.AboutUsStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AboutUsStats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Label = "Students are Placed",
                            Value = "15000+"
                        },
                        new
                        {
                            Id = 2,
                            Label = "Partner Companies",
                            Value = "500+"
                        },
                        new
                        {
                            Id = 3,
                            Label = "Placement Assistance",
                            Value = "100%"
                        });
                });

            modelBuilder.Entity("ScopeIndia.Models.ContactLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContactLocations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "TC 25/1403/3, Athens Plaza, KS Kovil Road, Thampanoor, Trivandrum, Kerala 695001",
                            Email = "info@scopeindia.org",
                            Phone = "9745936073",
                            RouteLink = "Location Route Map",
                            Title = "SCOPE INDIA Trivandrum, Kerala"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Phase 1, Main Gate, Diamond Arcade, Near Technopark, Trivandrum",
                            Email = "technopark@scopeindia.org",
                            Phone = "9745936073",
                            RouteLink = "Location Route Map",
                            Title = "SCOPE INDIA Technopark, Kerala"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Vasanth Nagar Rd, near JLN Metro Station, Kaloor, Kochi, Kerala 682025",
                            Email = "kochi@scopeindia.org",
                            Phone = "7592939481",
                            RouteLink = "Location Route Map",
                            Title = "SCOPE INDIA Kochi, Kerala"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Near WCC College, Palace Road, Nagercoil, Tamil Nadu 629001",
                            Email = "ngl@scopeindia.org",
                            Phone = "8075536185",
                            RouteLink = "Location Route Map",
                            Title = "SCOPE INDIA Nagercoil 1, Tamil Nadu"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Pharma Street, 5/2 Ward 28, Distillery Road, WCC Jn, Nagercoil",
                            Email = "ngl@scopeindia.org",
                            Phone = "8075536185",
                            RouteLink = "Location Route Map",
                            Title = "SCOPE INDIA Nagercoil 2, Tamil Nadu"
                        });
                });

            modelBuilder.Entity("ScopeIndia.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BatchDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LongDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Syllabus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Timing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("ScopeIndia.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Course")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("EducationalQualification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailConfirmationToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuardianMobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuardianName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuardianOccupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PinZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreferredTimings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScopeLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrainingMode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("ScopeIndia.Models.StudentCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SignedUpDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCourses");
                });

            modelBuilder.Entity("ScopeIndia.Models.StudentLogin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsTempPassword")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TempPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StudentLogins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "rajeeammu2001@gmail.com",
                            IsTempPassword = true,
                            TempPassword = "Temp1234"
                        });
                });

            modelBuilder.Entity("ScopeIndia.Models.StudentCourse", b =>
                {
                    b.HasOne("ScopeIndia.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScopeIndia.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
